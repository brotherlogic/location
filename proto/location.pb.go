// Code generated by protoc-gen-go. DO NOT EDIT.
// source: location.proto

/*
Package location is a generated protocol buffer package.

It is generated from these files:
	location.proto

It has these top-level messages:
	Config
	Location
	AddLocationRequest
	AddLocationResponse
	GetLocationRequest
	GetLocationResponse
*/
package location

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Locations []*Location `protobuf:"bytes,1,rep,name=locations" json:"locations,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

type Location struct {
	Name string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Lat  float32 `protobuf:"fixed32,2,opt,name=lat" json:"lat,omitempty"`
	Lon  float32 `protobuf:"fixed32,3,opt,name=lon" json:"lon,omitempty"`
	Time int64   `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Location) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *Location) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type AddLocationRequest struct {
	Location *Location `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
}

func (m *AddLocationRequest) Reset()                    { *m = AddLocationRequest{} }
func (m *AddLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*AddLocationRequest) ProtoMessage()               {}
func (*AddLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AddLocationRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type AddLocationResponse struct {
}

func (m *AddLocationResponse) Reset()                    { *m = AddLocationResponse{} }
func (m *AddLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*AddLocationResponse) ProtoMessage()               {}
func (*AddLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetLocationRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetLocationRequest) Reset()                    { *m = GetLocationRequest{} }
func (m *GetLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationRequest) ProtoMessage()               {}
func (*GetLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetLocationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetLocationResponse struct {
	Location *Location `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
}

func (m *GetLocationResponse) Reset()                    { *m = GetLocationResponse{} }
func (m *GetLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLocationResponse) ProtoMessage()               {}
func (*GetLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetLocationResponse) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "location.Config")
	proto.RegisterType((*Location)(nil), "location.Location")
	proto.RegisterType((*AddLocationRequest)(nil), "location.AddLocationRequest")
	proto.RegisterType((*AddLocationResponse)(nil), "location.AddLocationResponse")
	proto.RegisterType((*GetLocationRequest)(nil), "location.GetLocationRequest")
	proto.RegisterType((*GetLocationResponse)(nil), "location.GetLocationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LocationService service

type LocationServiceClient interface {
	AddLocation(ctx context.Context, in *AddLocationRequest, opts ...grpc.CallOption) (*AddLocationResponse, error)
	GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationResponse, error)
}

type locationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLocationServiceClient(cc *grpc.ClientConn) LocationServiceClient {
	return &locationServiceClient{cc}
}

func (c *locationServiceClient) AddLocation(ctx context.Context, in *AddLocationRequest, opts ...grpc.CallOption) (*AddLocationResponse, error) {
	out := new(AddLocationResponse)
	err := grpc.Invoke(ctx, "/location.LocationService/AddLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationResponse, error) {
	out := new(GetLocationResponse)
	err := grpc.Invoke(ctx, "/location.LocationService/GetLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LocationService service

type LocationServiceServer interface {
	AddLocation(context.Context, *AddLocationRequest) (*AddLocationResponse, error)
	GetLocation(context.Context, *GetLocationRequest) (*GetLocationResponse, error)
}

func RegisterLocationServiceServer(s *grpc.Server, srv LocationServiceServer) {
	s.RegisterService(&_LocationService_serviceDesc, srv)
}

func _LocationService_AddLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).AddLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/AddLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).AddLocation(ctx, req.(*AddLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).GetLocation(ctx, req.(*GetLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.LocationService",
	HandlerType: (*LocationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddLocation",
			Handler:    _LocationService_AddLocation_Handler,
		},
		{
			MethodName: "GetLocation",
			Handler:    _LocationService_GetLocation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "location.proto",
}

func init() { proto.RegisterFile("location.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xc9, 0x4f, 0x4e,
	0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xac,
	0xb8, 0xd8, 0x9c, 0xf3, 0xf3, 0xd2, 0x32, 0xd3, 0x85, 0x0c, 0xb8, 0x38, 0x61, 0xa2, 0xc5, 0x12,
	0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x42, 0x7a, 0x70, 0x7d, 0x3e, 0x50, 0x46, 0x10, 0x42, 0x91,
	0x52, 0x18, 0x17, 0x07, 0x4c, 0x58, 0x48, 0x88, 0x8b, 0x25, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51,
	0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x16, 0x12, 0xe0, 0x62, 0xce, 0x49, 0x2c, 0x91, 0x60, 0x52,
	0x60, 0xd4, 0x60, 0x0a, 0x02, 0x31, 0xc1, 0x22, 0xf9, 0x79, 0x12, 0xcc, 0x50, 0x11, 0x88, 0xbe,
	0x92, 0xcc, 0xdc, 0x54, 0x09, 0x16, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x30, 0x5b, 0xc9, 0x85, 0x4b,
	0xc8, 0x31, 0x25, 0x05, 0x6e, 0x63, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x1e, 0x17, 0xdc,
	0xd5, 0x60, 0x5b, 0xb0, 0x3b, 0x0f, 0xe1, 0x33, 0x51, 0x2e, 0x61, 0x14, 0x53, 0x8a, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x95, 0x34, 0xb8, 0x84, 0xdc, 0x53, 0x4b, 0xd0, 0x0d, 0xc7, 0xe2, 0x7c, 0x25,
	0x57, 0x2e, 0x61, 0x14, 0x95, 0x10, 0x03, 0x48, 0x75, 0x87, 0xd1, 0x5a, 0x46, 0x2e, 0x7e, 0x98,
	0x70, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x0f, 0x17, 0x37, 0x92, 0xdb, 0x84, 0x64,
	0x10, 0x06, 0x60, 0x7a, 0x5c, 0x4a, 0x16, 0x87, 0x2c, 0xd4, 0x43, 0x0c, 0x20, 0xd3, 0x90, 0x1c,
	0x8a, 0x6c, 0x1a, 0xa6, 0x4f, 0x91, 0x4d, 0xc3, 0xe2, 0x3b, 0x25, 0x86, 0x24, 0x36, 0x70, 0x12,
	0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x7e, 0x32, 0x15, 0x34, 0x02, 0x00, 0x00,
}
